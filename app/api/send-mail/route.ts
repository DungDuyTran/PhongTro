import { NextRequest, NextResponse } from "next/server";
import { transporter, mailOptions } from "@/lib/mail";
import { exportHopDongToPDF } from "@/lib/export-hopdong-pdf";

// B·∫°n c√≥ th·ªÉ thay b·∫±ng lo·∫°i d·ªØ li·ªáu ph√π h·ª£p v·ªõi h·ªá th·ªëng c·ªßa b·∫°n
interface HopDongData {
  id: string;
  tenPhong: string;
  tang: number;
  giaPhong: string;
  tienDaCoc: string;
  ngayBatDau: string;
  ngayKetThuc: string;
  khachHang: string;
  ghiChu: string;
}

export async function POST(req: NextRequest) {
  try {
    const { to, hopDongData } = await req.json();

    // T·∫°o PDF t·ª´ d·ªØ li·ªáu h·ª£p ƒë·ªìng nh·∫≠n ƒë∆∞·ª£c
    const pdfBuffer = await exportHopDongToPDF(hopDongData);

    // G·ª≠i mail k√®m PDF
    await transporter.sendMail({
      ...mailOptions,
      to,
      subject: "üìÑ H·ª£p ƒë·ªìng thu√™ ph√≤ng tr·ªç",
      text: "B·∫°n vui l√≤ng ki·ªÉm tra file h·ª£p ƒë·ªìng ƒë√≠nh k√®m.",
      attachments: [
        {
          filename: "hopdong.pdf",
          content: pdfBuffer,
        },
      ],
    });

    return NextResponse.json({
      success: true,
      message: "ƒê√£ g·ª≠i email th√†nh c√¥ng",
    });
  } catch (error: any) {
    console.error("‚ùå G·ª≠i email th·∫•t b·∫°i:", error);
    return NextResponse.json(
      { success: false, message: error.message },
      { status: 500 }
    );
  }
}
